% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mm_mix_of_experts.R
\docType{package}
\name{MM_MoE}
\alias{MM_MoE}
\title{R6 Class representing a multi-modal mix of experts model}
\description{
Creates a multi-modal mix of experts model
}
\details{
Trains an expert classifier on each class 
then combines the predictions from those experts using a
gating function to give a final prediction.
}
\section{Super class}{
\code{\link[MOMENT:MM_Model]{MOMENT::MM_Model}} -> \code{MM_MoE}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{models}}{(list)
List of the models created in training.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MM_MoE-new}{\code{MM_MoE$new()}}
\item \href{#method-MM_MoE-learn}{\code{MM_MoE$learn()}}
\item \href{#method-MM_MoE-clone}{\code{MM_MoE$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="binarise"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-binarise'><code>MOMENT::MM_Model$binarise()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="binarise_OVA"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-binarise_OVA'><code>MOMENT::MM_Model$binarise_OVA()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="binarise_OVO"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-binarise_OVO'><code>MOMENT::MM_Model$binarise_OVO()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="clone_model"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-clone_model'><code>MOMENT::MM_Model$clone_model()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="concat_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-concat_tasks'><code>MOMENT::MM_Model$concat_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="create_ovr_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-create_ovr_tasks'><code>MOMENT::MM_Model$create_ovr_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="create_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-create_tasks'><code>MOMENT::MM_Model$create_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="create_validation_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-create_validation_tasks'><code>MOMENT::MM_Model$create_validation_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="get_final_decision"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-get_final_decision'><code>MOMENT::MM_Model$get_final_decision()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="get_modality"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-get_modality'><code>MOMENT::MM_Model$get_modality()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="identify_relevant"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-identify_relevant'><code>MOMENT::MM_Model$identify_relevant()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="prepare_data"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-prepare_data'><code>MOMENT::MM_Model$prepare_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="read_raw"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-read_raw'><code>MOMENT::MM_Model$read_raw()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="read_raw_data"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-read_raw_data'><code>MOMENT::MM_Model$read_raw_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="update_task_classes"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-update_task_classes'><code>MOMENT::MM_Model$update_task_classes()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_MoE-new"></a>}}
\if{latex}{\out{\hypertarget{method-MM_MoE-new}{}}}
\subsection{Method \code{new()}}{
Create a new MM_MoE object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_MoE$new(
  config,
  model_type = "vote",
  task_type,
  decision = "prob",
  subset = NULL,
  balance = FALSE,
  validate = FALSE,
  filter_zeroes = 90,
  filter_missings = 50,
  filter_corr = FALSE,
  filter_var = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{(MM_Config)\cr
Configuration object, specifying how the model should be constructed.}

\item{\code{task_type}}{(character)\cr
Type of model - "classif" for classification, "multilabel" for multilabel classification or "surv" for survival analysis.}

\item{\code{decision}}{(character)\cr
Type of decision in combining modalities - "prob" or "soft" for soft voting, "vote" or "hard" for hard voting, "meta for meta learning}

\item{\code{subset}}{(integer)\cr
A vector of integers specifying the indices of the modalities to be included in the model.}

\item{\code{balance}}{(logical(1))\cr
Should the tasks be balanced during training?}

\item{\code{validate}}{(logical(1))\cr
Should the model be validated with validation data provided in the config file.}

\item{\code{filter_zeroes}}{(double(1))\cr
Features with this percentage of zero values or greater will not be included in the model.}

\item{\code{filter_missings}}{(double(1))\cr
Features with this percentage of missing values or greater will not be included in the model.}

\item{\code{filter_corr}}{(double(1))\cr
Should correlated features be included in the model? If FALSE, one feature from each correlated pair is eliminated.}

\item{\code{filter_var}}{(double(1))\cr
Should low variance features be included in the model?}

\item{\code{concat}}{(logical(1))\cr
Should the tasks be concatenated to form a single, large dataset?}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new [MM_MoE] object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_MoE-learn"></a>}}
\if{latex}{\out{\hypertarget{method-MM_MoE-learn}{}}}
\subsection{Method \code{learn()}}{
Train and test the mix of experts model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_MoE$learn(config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{(MM_Config)\cr
Configuration object, specifying how the model should be constructed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An MM_Results object containing the model results.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_MoE-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MM_MoE-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_MoE$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

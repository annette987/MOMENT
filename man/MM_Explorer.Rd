% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mm_explorer.R
\docType{package}
\name{MM_Explorer}
\alias{MM_Explorer}
\title{R6 Class for exploring the raw data}
\description{
Allow the user to generate PCA, TSNE and UMAP plots
for each modality in the data.
}
\section{Super class}{
\code{\link[MOMENT:MM_Model]{MOMENT::MM_Model}} -> \code{MM_Explorer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MM_Explorer-new}{\code{MM_Explorer$new()}}
\item \href{#method-MM_Explorer-exploreData}{\code{MM_Explorer$exploreData()}}
\item \href{#method-MM_Explorer-learn}{\code{MM_Explorer$learn()}}
\item \href{#method-MM_Explorer-clone}{\code{MM_Explorer$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="binarise"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-binarise'><code>MOMENT::MM_Model$binarise()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="binarise_OVA"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-binarise_OVA'><code>MOMENT::MM_Model$binarise_OVA()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="binarise_OVO"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-binarise_OVO'><code>MOMENT::MM_Model$binarise_OVO()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="clone_model"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-clone_model'><code>MOMENT::MM_Model$clone_model()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="concat_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-concat_tasks'><code>MOMENT::MM_Model$concat_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="create_ovr_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-create_ovr_tasks'><code>MOMENT::MM_Model$create_ovr_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="create_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-create_tasks'><code>MOMENT::MM_Model$create_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="create_validation_tasks"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-create_validation_tasks'><code>MOMENT::MM_Model$create_validation_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="get_final_decision"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-get_final_decision'><code>MOMENT::MM_Model$get_final_decision()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="get_modality"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-get_modality'><code>MOMENT::MM_Model$get_modality()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="identify_relevant"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-identify_relevant'><code>MOMENT::MM_Model$identify_relevant()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="prepare_data"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-prepare_data'><code>MOMENT::MM_Model$prepare_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="read_raw"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-read_raw'><code>MOMENT::MM_Model$read_raw()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="read_raw_data"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-read_raw_data'><code>MOMENT::MM_Model$read_raw_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="MOMENT" data-topic="MM_Model" data-id="update_task_classes"><a href='../../MOMENT/html/MM_Model.html#method-MM_Model-update_task_classes'><code>MOMENT::MM_Model$update_task_classes()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_Explorer-new"></a>}}
\if{latex}{\out{\hypertarget{method-MM_Explorer-new}{}}}
\subsection{Method \code{new()}}{
Create a new MM_Explorer object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_Explorer$new(
  config,
  decision = "prob",
  subset = NULL,
  balance = FALSE,
  filter_zeroes = 90,
  filter_missings = 50,
  filter_corr = FALSE,
  filter_var = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{(MM_Config)\cr
Configuration object, specifying how the model should be constructed.}

\item{\code{decision}}{(character)\cr
Type of prediction - 'response' or 'prob'.}

\item{\code{subset}}{(integer)\cr}

\item{\code{balance}}{(logical(1))\cr
Should the tasks be balanced during training?}

\item{\code{filter_zeroes}}{(double(1))\cr
Features with this percentage of zero values or greater will not be included in the model.}

\item{\code{filter_missings}}{(double(1))\cr
Features with this percentage of missing values or greater will not be included in the model.}

\item{\code{filter_corr}}{(double(1))\cr
Should correlated features be included in the model? If FALSE, one feature from each correlated pair is eliminated.}

\item{\code{filter_var}}{(double(1))\cr
Should low variance features be included in the model?}

\item{\code{model_type}}{(character)\cr
Type of model - "CLASSIF" for classification or "SURV" for survival analysis.}

\item{\code{concat}}{(logical(1))\cr
Should the tasks be concatenated to form a single, large dataset?}

\item{\code{validate}}{(logical(1))\cr
Should the model be validated with validation data provided in the config file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new [MM_Explorer] object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_Explorer-exploreData"></a>}}
\if{latex}{\out{\hypertarget{method-MM_Explorer-exploreData}{}}}
\subsection{Method \code{exploreData()}}{
Create UMAP, t-SNE and PCA plots for one modality of  data.
Each plot is geerated with a range of parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_Explorer$exploreData(plot_type, data, target, file_prefix)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plot_type}}{(character)\cr
The type of plot to produce. Can be either "PCA", "TSNE" or "UMAP".}

\item{\code{data}}{(data.frame)\cr
The raw data to be explored.}

\item{\code{target}}{(character)\cr
The target variable in the data.frame.}

\item{\code{file_prefix}}{(character)\cr
The prefix (including path) of the filename to which the plots should be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_Explorer-learn"></a>}}
\if{latex}{\out{\hypertarget{method-MM_Explorer-learn}{}}}
\subsection{Method \code{learn()}}{
Explore each modality of data.
PCA, TSNE and UMAP plots with varying parameters are generated for each modality and saved to disk.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_Explorer$learn(config, file_prefix)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{(config)\cr
The config object contain details of the data to be explored.}

\item{\code{file_prefix}}{(character)\cr
The prefix (including path) of the filename to which the plots should be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MM_Explorer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MM_Explorer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MM_Explorer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
